plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-kapt'

}

android {
    compileSdk 34

    defaultConfig {
        applicationId "com.ian.app.beverages"
        minSdkVersion 21
        targetSdk 34
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += ["-opt-in=kotlin.RequiresOptIn",
                             // Enable experimental coroutines APIs, including Flow
                             "-opt-in=kotlinx.coroutines.ExperimentalCoroutinesApi",
                             "-opt-in=androidx.compose.foundation.ExperimentalFoundationApi",
                             "-opt-in=kotlinx.coroutines.FlowPreview",
                             "-opt-in=androidx.compose.material.ExperimentalMaterialApi",
                             "-opt-in=kotlin.Experimental"]
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.3'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

}


dependencies {
    implementation(platform("org.jetbrains.kotlin:kotlin-bom:1.8.0"))
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation(platform("androidx.compose:compose-bom:$composebom_version"))
    // or only import the main APIs for the underlying toolkit systems,
    // such as input and measurement/layout
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.foundation:foundation'
    //Material desing 2
    implementation 'androidx.compose.material:material'
    //Material Design 3
//    implementation 'androidx.compose.material3:material3'
    // Android Studio Preview support
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.navigation:navigation-testing:2.5.3'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    // UI Tests
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4:1.3.0'
    debugImplementation 'androidx.compose.ui:ui-test-manifest:1.3.0'
    // Optional - Integration with activities
    implementation 'androidx.activity:activity-compose:1.6.1'
    // Optional - Integration with ViewModels
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.5.1'
    // Optional - Integration with LiveData
    implementation 'androidx.compose.runtime:runtime-livedata'
    // compose constraint
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.1"
    // Optional - Included automatically by material, only add when you need
    // the icons but not the material library (e.g. when using Material3 or a
    // custom design system based on Foundation)
    implementation 'androidx.compose.material:material-icons-core'
    // Optional - Add full set of material icons
    implementation 'androidx.compose.material:material-icons-extended'
    // Optional - Add window size utils
    implementation 'androidx.compose.material3:material3-window-size-class'
    // optional - Jetpack Compose integration
    implementation "androidx.paging:paging-compose:1.0.0-alpha17"

    testImplementation 'junit:junit:4.13.2'
    testImplementation "androidx.arch.core:core-testing:2.1.0"

    testImplementation(unitTestLibs.bundles.mockito)

    //splash
    implementation 'androidx.core:core-splashscreen:1.0.0'
    //Preferences data store
    implementation "androidx.datastore:datastore-preferences-core:1.0.0"
    implementation "androidx.datastore:datastore-preferences:1.0.0"
    //hilt
    implementation(libs.hilt)
    implementation(libs.hilt.navigation.compose)
    kapt(libs.hilt.kapt)
    //log
    implementation(libs.timber)
    //moshi
    implementation(libs.gson)
    implementation(libs.gson.converter)
    // Coil
    implementation(libs.coil.compose)
    //coroutine
    implementation(libs.bundles.coroutine.bundle)
    implementation(unitTestLibs.coroutine.unit.test)
    //retrofit
    implementation(libs.bundles.retrofit.bundle)
    implementation(libs.bundles.okhttp.bundle)
    //navigation
    implementation(libs.navigation.compose)
    //room
    implementation(libs.room)
    kapt(libs.room.kapt)
    //turbine
    testImplementation 'app.cash.turbine:turbine:1.0.0'
    //truth
    // Truth
    testImplementation "com.google.truth:truth:1.1.5"

}
