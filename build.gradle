import io.gitlab.arturbosch.detekt.Detekt
import io.gitlab.arturbosch.detekt.DetektCreateBaselineTask

buildscript {
    ext {
        compose_ui_version = '1.4.3'
        composebom_version = "2022.10.00"
    }
}// Top-level build file where you can add configuration options common to all sub-projects/modules.
plugins {
    id 'com.android.application' version '7.3.1' apply false
    id 'com.android.library' version '7.3.1' apply false
    id 'org.jetbrains.kotlin.android' version '1.8.10' apply false
    id "com.google.dagger.hilt.android" version '2.44.2' apply false
    id 'org.jetbrains.kotlin.jvm' version '1.8.10' apply false
    //detekt
    id 'io.gitlab.arturbosch.detekt' version '1.23.1' apply false
    id 'org.jetbrains.kotlinx.kover' version '0.7.3' apply false
}

def localProperties = new Properties()
localProperties.load(project.rootProject.file("local.properties").newDataInputStream())


subprojects {
    apply plugin: 'io.gitlab.arturbosch.detekt'
    apply plugin: 'org.jetbrains.kotlinx.kover'
    //kover
    koverReport {
        // filters for all report types of all build variants
        filters {
            excludes {
                classes(
                        "*Fragment",
                        "*Fragment\$*",
                        "*Activity",
                        "*Activity\$*",
                        "*.databinding.*",
                        "*Factory*",
                        "*Hilt*",
                        "*_HiltModules_.*",
                        "*HiltModules*",
                        "*GeneratedInjector*",
                        "*.BuildConfig",
                        "dagger\\.hilt\\..*",
                        "**.hilt_aggregated_deps",
                        "*Provide*",
                        "Provide*",
                        "*.DataBinderMapperImpl*",
                        "*.DataBindingTriggerClass*",
                        "*.BR*",
                        "*_MembersInjector*",
//                        "com.permatabank.qram.MainApplication",
//                        "com.permatabank.qram.core.base.*"
                )
            }
        }

    }

    //detekt
    detekt {
        toolVersion = "1.23.1"
        config.setFrom(file("config/detekt/detekt.yml"))
        parallel = true
        allRules = true
        autoCorrect = true
        buildUponDefaultConfig = true
    }
    dependencies {
        detektPlugins("io.gitlab.arturbosch.detekt:detekt-formatting:1.23.1")
    }

    tasks.withType(Detekt).configureEach {
        reports {
            xml.required.set(true)
            html.required.set(true)
            txt.required.set(false)
            sarif.required.set(false)
            md.required.set(false)
        }
    }
}

// Groovy DSL
tasks.withType(Detekt).configureEach {
    jvmTarget = "1.8"
}
tasks.withType(DetektCreateBaselineTask).configureEach {
    jvmTarget = "1.8"
}


//repositories {
//    mavenCentral()
//}

//detekt {
//    buildUponDefaultConfig = true // preconfigure defaults
//    allRules = false // activate all available (even unstable) rules.
//    config.setFrom("$projectDir/config/detekt.yml") // point to your custom config defining rules to run, overwriting default behavior
//    baseline = file("$projectDir/config/baseline.xml") // a way of suppressing issues before introducing detekt
//}

